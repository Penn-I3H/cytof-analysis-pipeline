// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_edgelist
List get_edgelist(arma::imat& nbrs);
RcppExport SEXP _CL2_get_edgelist(SEXP nbrsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::imat& >::type nbrs(nbrsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_edgelist(nbrs));
    return rcpp_result_gen;
END_RCPP
}
// bhatt
NumericMatrix bhatt(arma::mat& kde_mat, int d, int b);
RcppExport SEXP _CL2_bhatt(SEXP kde_matSEXP, SEXP dSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type kde_mat(kde_matSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(bhatt(kde_mat, d, b));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CL2_get_edgelist", (DL_FUNC) &_CL2_get_edgelist, 1},
    {"_CL2_bhatt", (DL_FUNC) &_CL2_bhatt, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_CL2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
